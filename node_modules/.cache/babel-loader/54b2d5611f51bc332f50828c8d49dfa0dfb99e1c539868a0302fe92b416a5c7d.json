{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\taskflow-fullstack\\\\taskflow-frontend\\\\src\\\\components\\\\Analytics.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = ({\n  tasks\n}) => {\n  // Daily Completion Trend (7 days)\n  const today = new Date();\n  let days = [];\n  for (let i = 6; i >= 0; i--) {\n    const d = new Date(today);\n    d.setDate(today.getDate() - i);\n    days.push(d.toISOString().slice(0, 10));\n  }\n  const dailyCounts = days.map(day => tasks.filter(t => t.status === 'completed' && t.createdAt && t.createdAt.slice(0, 10) === day).length);\n\n  // Category Breakdown\n  const categories = {};\n  tasks.forEach(t => {\n    if (!categories[t.category]) categories[t.category] = 0;\n    if (t.status === 'completed') categories[t.category]++;\n  });\n  const catKeys = Object.keys(categories).filter(k => k);\n\n  // Weekly Performance Overview\n  let week = [];\n  for (let i = 6; i >= 0; i--) {\n    const d = new Date(today);\n    d.setDate(today.getDate() - i);\n    week.push(d.toISOString().slice(0, 10));\n  }\n  const weekCompleted = week.map(day => tasks.filter(t => t.status === 'completed' && t.createdAt && t.createdAt.slice(0, 10) === day).length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: \"\\uD83D\\uDCC8 Daily Completion Trend (7 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        id: \"dailyChart\",\n        children: days.map((day, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            height: 30 + dailyCounts[i] * 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-value\",\n            children: dailyCounts[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-label\",\n            children: new Date(day).toLocaleDateString(undefined, {\n              month: 'short',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: \"\\uD83C\\uDFF7\\uFE0F Category Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        id: \"categoryChart\",\n        children: catKeys.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'white'\n          },\n          children: \"No completed tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : catKeys.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            height: 30 + categories[cat] * 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-value\",\n            children: categories[cat]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-label\",\n            children: cat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, cat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      style: {\n        gridColumn: '1 / -1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-title\",\n        children: \"\\uD83D\\uDCCA Weekly Performance Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        id: \"weeklyChart\",\n        children: week.map((day, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            height: 30 + weekCompleted[i] * 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-value\",\n            children: weekCompleted[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar-label\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day).getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Analytics","tasks","today","Date","days","i","d","setDate","getDate","push","toISOString","slice","dailyCounts","map","day","filter","t","status","createdAt","length","categories","forEach","category","catKeys","Object","keys","k","week","weekCompleted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","toLocaleDateString","undefined","month","color","cat","gridColumn","getDay","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/taskflow-fullstack/taskflow-frontend/src/components/Analytics.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Analytics = ({ tasks }) => {\r\n  // Daily Completion Trend (7 days)\r\n  const today = new Date();\r\n  let days = [];\r\n  for (let i = 6; i >= 0; i--) {\r\n    const d = new Date(today);\r\n    d.setDate(today.getDate() - i);\r\n    days.push(d.toISOString().slice(0, 10));\r\n  }\r\n  const dailyCounts = days.map(day => tasks.filter(t => t.status === 'completed' && t.createdAt && t.createdAt.slice(0, 10) === day).length);\r\n\r\n  // Category Breakdown\r\n  const categories = {};\r\n  tasks.forEach(t => {\r\n    if (!categories[t.category]) categories[t.category] = 0;\r\n    if (t.status === 'completed') categories[t.category]++;\r\n  });\r\n  const catKeys = Object.keys(categories).filter(k => k);\r\n\r\n  // Weekly Performance Overview\r\n  let week = [];\r\n  for (let i = 6; i >= 0; i--) {\r\n    const d = new Date(today);\r\n    d.setDate(today.getDate() - i);\r\n    week.push(d.toISOString().slice(0, 10));\r\n  }\r\n  const weekCompleted = week.map(day => tasks.filter(t => t.status === 'completed' && t.createdAt && t.createdAt.slice(0, 10) === day).length);\r\n\r\n  return (\r\n    <div className=\"analytics-grid\">\r\n      <div className=\"chart-container\">\r\n        <div className=\"chart-title\">📈 Daily Completion Trend (7 Days)</div>\r\n        <div className=\"chart\" id=\"dailyChart\">\r\n          {days.map((day, i) => (\r\n            <div className=\"bar\" key={day} style={{height: 30 + dailyCounts[i] * 30}}>\r\n              <span className=\"bar-value\">{dailyCounts[i]}</span>\r\n              <span className=\"bar-label\">{new Date(day).toLocaleDateString(undefined, { month: 'short', day: 'numeric' })}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\">\r\n        <div className=\"chart-title\">🏷️ Category Breakdown</div>\r\n        <div className=\"chart\" id=\"categoryChart\">\r\n          {catKeys.length === 0 ? (\r\n            <span style={{color:'white'}}>No completed tasks</span>\r\n          ) : (\r\n            catKeys.map(cat => (\r\n              <div className=\"bar\" key={cat} style={{height: 30 + categories[cat] * 30}}>\r\n                <span className=\"bar-value\">{categories[cat]}</span>\r\n                <span className=\"bar-label\">{cat}</span>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-container\" style={{gridColumn: '1 / -1'}}>\r\n        <div className=\"chart-title\">📊 Weekly Performance Overview</div>\r\n        <div className=\"chart\" id=\"weeklyChart\">\r\n          {week.map((day, i) => (\r\n            <div className=\"bar\" key={day} style={{height: 30 + weekCompleted[i] * 30}}>\r\n              <span className=\"bar-value\">{weekCompleted[i]}</span>\r\n              <span className=\"bar-label\">{['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][new Date(day).getDay()]}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}